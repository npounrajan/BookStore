<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="runner.ApiRegressionRunner" time="5.38" tests="35" errors="6" skipped="0" failures="11">
  <properties>
    <property name="idea.version" value="2022.2.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="17.0.15+6"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.15.6-hotspot\bin"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Projects\bookstore-api\bookstore-api"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Projects\bookstore-api\bookstore-api"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="17.0.15+6"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\NPOUNR~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="maven.ext.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.2.3\plugins\maven\lib\maven-event-listener.jar"/>
    <property name="classworlds.conf" value="C:\Users\npounrajan\.m2\wrapper\dists\apache-maven-3.9.10-bin\53h08a94dg6djh6umvruv7q564\apache-maven-3.9.10\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.15.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Eclipse Adoptium\jdk-17.0.15.6-hotspot\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Users\npounrajan\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.11;C:\Program Files\nodejs\;C:\Users\npounrajan\AppData\Roaming\npm;C:\Program Files\PowerShell\7\;C:\Users\npounrajan\Downloads\maven-mvnd-1.0.2-windows-amd64\maven-mvnd-1.0.2-windows-amd64\mvn\bin;C:\Users\npounrajan\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\npounrajan\AppData\Local\Programs\Python\Python311\;C:\Users\npounrajan\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Azure Data Studio\bin;C:\Users\npounrajan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Mobile\flutter\bin;C:\Program Files\gradle-8.8\bin;C:\Users\npounrajan\.dotnet\tools;C:\Users\npounrajan\AppData\Roaming\npm;C:\Program Files\nodejs;C:\Users\npounrajan\AppData\Local\Android\Sdk\platform-tools;C:\Users\npounrajan\AppData\Local\Android\Sdk\tools;C:\Users\npounrajan\AppData\Roaming\npm;C:\Users\npounrajan\Downloads\maven-mvnd-1.0.2-windows-amd64\maven-mvnd-1.0.2-windows-amd64\mvn\bin;C:\Program Files\Eclipse Adoptium\jdk-17.0.15.6-hotspot\bin;;."/>
    <property name="maven.conf" value="C:\Users\npounrajan\.m2\wrapper\dists\apache-maven-3.9.10-bin\53h08a94dg6djh6umvruv7q564\apache-maven-3.9.10/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="61.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\npounrajan"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="17"/>
    <property name="user.name" value="npounrajan"/>
    <property name="java.class.path" value="C:\Users\npounrajan\.m2\wrapper\dists\apache-maven-3.9.10-bin\53h08a94dg6djh6umvruv7q564\apache-maven-3.9.10\boot\plexus-classworlds-2.9.0.jar;C:\Users\npounrajan\.m2\wrapper\dists\apache-maven-3.9.10-bin\53h08a94dg6djh6umvruv7q564\apache-maven-3.9.10\boot\plexus-classworlds.license"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher -Didea.version=2022.2.5 clean test -PRegression"/>
    <property name="java.home" value="C:\Program Files\Eclipse Adoptium\jdk-17.0.15.6-hotspot"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="17.0.15"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="maven.home" value="C:\Users\npounrajan\.m2\wrapper\dists\apache-maven-3.9.10-bin\53h08a94dg6djh6umvruv7q564\apache-maven-3.9.10"/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="Temurin-17.0.15+6"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase name="Successfully create a book with valid input" classname="Create a new book" time="3.729"/>
  <testcase name="Create a book with special characters in title and author" classname="Create a new book" time="0.07"/>
  <testcase name="Create a book without a title" classname="Create a new book" time="0.065"/>
  <testcase name="Create a book without an author" classname="Create a new book" time="0.076"/>
  <testcase name="Create a book without a price" classname="Create a new book" time="0.027">
    <error message="Cannot invoke &quot;String.trim()&quot; because &quot;in&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "String.trim()" because "in" is null
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1838)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_post_request_with(BookManagementTest.java:49)
	at ✽.I send a POST request to "/books/" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:49)
</error>
    <system-out><![CDATA[
@regression @createBook @Negative
Scenario: Create a book without a price         # src/test/resources/features/Regression/CreateBook.feature:48
  Given the API is running                      # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token       # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  When I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
      java.lang.NullPointerException: Cannot invoke "String.trim()" because "in" is null
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1838)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_post_request_with(BookManagementTest.java:49)
	at ?.I send a POST request to "/books/" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:49)

  Then the response status should be 201        # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
  And Price in response should be 0             # apiStepDefinition.BookManagementTest.priceInResponseShouldBe(int)
]]></system-out>
  </testcase>
  <testcase name="Create a book with negative price" classname="Create a new book" time="0.046">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;201&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:60)
]]></failure>
    <system-out><![CDATA[
@regression @createBook @Negative
Scenario: Create a book with negative price     # src/test/resources/features/Regression/CreateBook.feature:56
  Given the API is running                      # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token       # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  When I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 400        # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:60)

]]></system-out>
  </testcase>
  <testcase name="Create a book with non-numeric price" classname="Create a new book" time="0.007">
    <error message="For input string: &quot;free&quot;" type="java.lang.NumberFormatException">java.lang.NumberFormatException: For input string: "free"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_post_request_with(BookManagementTest.java:49)
	at ✽.I send a POST request to "/books/" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:64)
</error>
    <system-out><![CDATA[
@regression @createBook @Negative
Scenario: Create a book with non-numeric price  # src/test/resources/features/Regression/CreateBook.feature:63
  Given the API is running                      # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token       # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  When I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
      java.lang.NumberFormatException: For input string: "free"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_post_request_with(BookManagementTest.java:49)
	at ?.I send a POST request to "/books/" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:64)

  Then the response status should be 400        # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
]]></system-out>
  </testcase>
  <testcase name="Create a book with empty title" classname="Create a new book" time="0.048">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;201&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:74)
]]></failure>
    <system-out><![CDATA[
@regression @createBook @Negative
Scenario: Create a book with empty title        # src/test/resources/features/Regression/CreateBook.feature:70
  Given the API is running                      # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token       # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  When I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 400        # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:74)

]]></system-out>
  </testcase>
  <testcase name="Create a book with empty author" classname="Create a new book" time="0.044">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;201&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:81)
]]></failure>
    <system-out><![CDATA[
@regression @createBook @Negative
Scenario: Create a book with empty author       # src/test/resources/features/Regression/CreateBook.feature:77
  Given the API is running                      # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token       # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  When I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 400        # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:81)

]]></system-out>
  </testcase>
  <testcase name="Create a book with malformed JSON payload" classname="Create a new book" time="0.035"/>
  <testcase name="Send request with incorrect content type" classname="Create a new book" time="0.013">
    <error message="Step [I send a POST request to {string} with content type {string} and body:] is defined with 2 parameters at &apos;apiStepDefinition.BookManagementTest.iSendAPOSTRequestToWithContentTypeAndBody(java.lang.String,java.lang.String)&apos;.&#10;However, the gherkin step has 3 arguments:&#10; * &quot;/books/&quot;&#10; * &quot;text/plain&quot;&#10; * DocString:&#10;      &quot;&quot;&quot;null&#10;      title=The Alchemist&amp;author=Paulo Coelho&amp;price=399.0&#10;      &quot;&quot;&quot;&#10;Step text: I send a POST request to &quot;/books/&quot; with content type &quot;text/plain&quot; and body:" type="io.cucumber.core.exception.CucumberException"><![CDATA[io.cucumber.core.exception.CucumberException: Step [I send a POST request to {string} with content type {string} and body:] is defined with 2 parameters at 'apiStepDefinition.BookManagementTest.iSendAPOSTRequestToWithContentTypeAndBody(java.lang.String,java.lang.String)'.
However, the gherkin step has 3 arguments:
 * "/books/"
 * "text/plain"
 * DocString:
      """null
      title=The Alchemist&author=Paulo Coelho&price=399.0
      """
Step text: I send a POST request to "/books/" with content type "text/plain" and body:
	at io.cucumber.core.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:134)
	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:42)
	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)
	at io.cucumber.core.runner.TestStep.run(TestStep.java:49)
	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)
	at io.cucumber.core.runner.TestCase.run(TestCase.java:51)
	at io.cucumber.core.runner.Runner.runPickle(Runner.java:66)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:283)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:173)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]></error>
    <system-out><![CDATA[
@regression @createBook @Negative
Scenario: Send request with incorrect content type                                 # src/test/resources/features/Regression/CreateBook.feature:89
  Given the API is running                                                         # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token                                          # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  When I send a POST request to "/books/" with content type "text/plain" and body: # apiStepDefinition.BookManagementTest.iSendAPOSTRequestToWithContentTypeAndBody(java.lang.String,java.lang.String)
      io.cucumber.core.exception.CucumberException: Step [I send a POST request to {string} with content type {string} and body:] is defined with 2 parameters at 'apiStepDefinition.BookManagementTest.iSendAPOSTRequestToWithContentTypeAndBody(java.lang.String,java.lang.String)'.
However, the gherkin step has 3 arguments:
 * "/books/"
 * "text/plain"
 * DocString:
      """null
      title=The Alchemist&author=Paulo Coelho&price=399.0
      """
Step text: I send a POST request to "/books/" with content type "text/plain" and body:
	at io.cucumber.core.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:134)
	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:42)
	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)
	at io.cucumber.core.runner.TestStep.run(TestStep.java:49)
	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)
	at io.cucumber.core.runner.TestCase.run(TestCase.java:51)
	at io.cucumber.core.runner.Runner.runPickle(Runner.java:66)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:283)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:173)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)

  Then the response status should be 415                                           # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
]]></system-out>
  </testcase>
  <testcase name="Create a book with duplicate title and author" classname="Create a new book" time="0.081">
    <failure message="&#10;Expected: is &lt;409&gt;&#10;     but: was &lt;201&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <409>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 409(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:104)
]]></failure>
    <system-out><![CDATA[
@regression @createBook @Negative
Scenario: Create a book with duplicate title and author # src/test/resources/features/Regression/CreateBook.feature:97
  Given the API is running                              # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token               # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  Given I send a POST request to "/books/" with:        # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 409                # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <409>
     but: was <201>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 409(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/CreateBook.feature:104)

]]></system-out>
  </testcase>
  <testcase name="Successfully delete a book by valid ID" classname="Delete a book by ID" time="0.061"/>
  <testcase name="Verify deleted book is no longer retrievable" classname="Delete a book by ID" time="0.072"/>
  <testcase name="Delete a book using non-existent ID" classname="Delete a book by ID" time="0.07"/>
  <testcase name="Delete a book with invalid (non-numeric) ID" classname="Delete a book by ID" time="0.044"/>
  <testcase name="Delete a book with missing ID" classname="Delete a book by ID" time="0.047"/>
  <testcase name="Delete a book with empty ID" classname="Delete a book by ID" time="0.049">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <405>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/DeleteBook.feature:41)
]]></failure>
    <system-out><![CDATA[
@regression @deleteBook @Negative
Scenario: Delete a book with empty ID          # src/test/resources/features/Regression/DeleteBook.feature:39
  Given the API is running                     # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token      # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a DELETE request to "/books/ "   # apiStepDefinition.BookManagementTest.i_send_a_delete_request(java.lang.String)
  Then the response status should be 400       # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <405>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/DeleteBook.feature:41)

]]></system-out>
  </testcase>
  <testcase name="Delete the same book twice" classname="Delete a book by ID" time="0.058"/>
  <testcase name="Successfully retrieve a book by valid ID" classname="Get a book by ID" time="0.059"/>
  <testcase name="Verify response contains price field as well" classname="Get a book by ID" time="0.05">
    <error message="For input string: &quot;price&quot;" type="java.lang.NumberFormatException">java.lang.NumberFormatException: For input string: "price"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at apiStepDefinition.BookManagementTest.theResponseShouldContainField(BookManagementTest.java:123)
	at ✽.the response should contain field "price"(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/GetAllBooks.feature:24)
</error>
    <system-out><![CDATA[
@regression @getAllBooks @Positive
Scenario: Verify response contains price field as well # src/test/resources/features/Regression/GetAllBooks.feature:21
  Given the API is running                             # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token              # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a GET request to "/books/{bookId}"       # apiStepDefinition.BookManagementTest.i_send_a_get_request(java.lang.String)
  Then the response status should be 200               # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
  And the response should contain field "price"        # apiStepDefinition.BookManagementTest.theResponseShouldContainField(java.lang.String)
      java.lang.NumberFormatException: For input string: "price"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at apiStepDefinition.BookManagementTest.theResponseShouldContainField(BookManagementTest.java:123)
	at ?.the response should contain field "price"(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/GetAllBooks.feature:24)

]]></system-out>
  </testcase>
  <testcase name="Retrieve a book using non-existent ID" classname="Get a book by ID" time="0.047"/>
  <testcase name="Retrieve a book with invalid (non-numeric) ID" classname="Get a book by ID" time="0.038"/>
  <testcase name="Retrieve a book with missing ID" classname="Get a book by ID" time="0.036">
    <failure message="&#10;Expected: is &lt;405&gt;&#10;     but: was &lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <405>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 405(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/GetAllBooks.feature:39)
]]></failure>
    <system-out><![CDATA[
@regression @getAllBooks @Negative
Scenario: Retrieve a book with missing ID      # src/test/resources/features/Regression/GetAllBooks.feature:37
  Given the API is running                     # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token      # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a GET request to "/books/"       # apiStepDefinition.BookManagementTest.i_send_a_get_request(java.lang.String)
  Then the response status should be 405       # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <405>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 405(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/GetAllBooks.feature:39)

]]></system-out>
  </testcase>
  <testcase name="Retrieve a book with empty ID" classname="Get a book by ID" time="0.034">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/GetAllBooks.feature:44)
]]></failure>
    <system-out><![CDATA[
@regression @getAllBooks @Negative
Scenario: Retrieve a book with empty ID        # src/test/resources/features/Regression/GetAllBooks.feature:42
  Given the API is running                     # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token      # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with: # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a GET request to "/books/ "      # apiStepDefinition.BookManagementTest.i_send_a_get_request(java.lang.String)
  Then the response status should be 400       # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/GetAllBooks.feature:44)

]]></system-out>
  </testcase>
  <testcase name="Successfully update a book with valid input" classname="Update an existing book" time="0.082"/>
  <testcase name="Update only the title of the book" classname="Update an existing book" time="0.053"/>
  <testcase name="Update with unicode characters in title" classname="Update an existing book" time="0.047"/>
  <testcase name="Update a non-existent book ID" classname="Update an existing book" time="0.062"/>
  <testcase name="Update book with missing title field" classname="Update an existing book" time="0.055">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:52)
]]></failure>
    <system-out><![CDATA[
@regression @updateBook @Negative
Scenario: Update book with missing title field         # src/test/resources/features/Regression/UpdateBook.feature:48
  Given the API is running                             # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token              # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a PUT request to "/books/{bookId}" with: # apiStepDefinition.BookManagementTest.i_send_a_put_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 400               # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:52)

]]></system-out>
  </testcase>
  <testcase name="Update book with missing author field" classname="Update an existing book" time="0.046">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:59)
]]></failure>
    <system-out><![CDATA[
@regression @updateBook @Negative
Scenario: Update book with missing author field        # src/test/resources/features/Regression/UpdateBook.feature:55
  Given the API is running                             # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token              # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a PUT request to "/books/{bookId}" with: # apiStepDefinition.BookManagementTest.i_send_a_put_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 400               # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:59)

]]></system-out>
  </testcase>
  <testcase name="Update book with missing price field" classname="Update an existing book" time="0.025">
    <error message="Cannot invoke &quot;String.trim()&quot; because &quot;in&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "String.trim()" because "in" is null
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1838)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_put_request_with(BookManagementTest.java:61)
	at ✽.I send a PUT request to "/books/{bookId}" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:63)
</error>
    <system-out><![CDATA[
@regression @updateBook @Negative
Scenario: Update book with missing price field         # src/test/resources/features/Regression/UpdateBook.feature:62
  Given the API is running                             # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token              # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a PUT request to "/books/{bookId}" with: # apiStepDefinition.BookManagementTest.i_send_a_put_request_with(java.lang.String,io.cucumber.datatable.DataTable)
      java.lang.NullPointerException: Cannot invoke "String.trim()" because "in" is null
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1838)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_put_request_with(BookManagementTest.java:61)
	at ?.I send a PUT request to "/books/{bookId}" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:63)

  Then the response status should be 400               # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
]]></system-out>
  </testcase>
  <testcase name="Update book with empty title" classname="Update an existing book" time="0.039">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:73)
]]></failure>
    <system-out><![CDATA[
@regression @updateBook @Negative
Scenario: Update book with empty title                 # src/test/resources/features/Regression/UpdateBook.feature:69
  Given the API is running                             # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token              # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a PUT request to "/books/{bookId}" with: # apiStepDefinition.BookManagementTest.i_send_a_put_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 400               # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:73)

]]></system-out>
  </testcase>
  <testcase name="Update book with negative price" classname="Update an existing book" time="0.038">
    <failure message="&#10;Expected: is &lt;400&gt;&#10;     but: was &lt;200&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ✽.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:80)
]]></failure>
    <system-out><![CDATA[
@regression @updateBook @Negative
Scenario: Update book with negative price              # src/test/resources/features/Regression/UpdateBook.feature:76
  Given the API is running                             # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token              # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a PUT request to "/books/{bookId}" with: # apiStepDefinition.BookManagementTest.i_send_a_put_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  Then the response status should be 400               # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
      java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
	at apiAssertions.JsonResponseAssertion.assertResponseCode(JsonResponseAssertion.java:14)
	at apiStepDefinition.BookManagementTest.the_response_status_should_be(BookManagementTest.java:73)
	at ?.the response status should be 400(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:80)

]]></system-out>
  </testcase>
  <testcase name="Update book with non-numeric price" classname="Update an existing book" time="0.027">
    <error message="For input string: &quot;forty&quot;" type="java.lang.NumberFormatException">java.lang.NumberFormatException: For input string: "forty"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_put_request_with(BookManagementTest.java:61)
	at ✽.I send a PUT request to "/books/{bookId}" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:84)
</error>
    <system-out><![CDATA[
@regression @updateBook @Negative
Scenario: Update book with non-numeric price           # src/test/resources/features/Regression/UpdateBook.feature:83
  Given the API is running                             # apiStepDefinition.BookManagementTest.the_api_is_running()
  And I have a valid authentication token              # apiStepDefinition.BookManagementTest.i_have_a_valid_authentication_token()
  And I send a POST request to "/books/" with:         # apiStepDefinition.BookManagementTest.i_send_a_post_request_with(java.lang.String,io.cucumber.datatable.DataTable)
  When I send a PUT request to "/books/{bookId}" with: # apiStepDefinition.BookManagementTest.i_send_a_put_request_with(java.lang.String,io.cucumber.datatable.DataTable)
      java.lang.NumberFormatException: For input string: "forty"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at apiObjectRepository.ApiPage.getRequestBody(ApiPage.java:25)
	at apiStepDefinition.BookManagementTest.i_send_a_put_request_with(BookManagementTest.java:61)
	at ?.I send a PUT request to "/books/{bookId}" with:(file:///C:/Projects/bookstore-api/bookstore-api/src/test/resources/features/Regression/UpdateBook.feature:84)

  Then the response status should be 400               # apiStepDefinition.BookManagementTest.the_response_status_should_be(java.lang.Integer)
]]></system-out>
  </testcase>
</testsuite>